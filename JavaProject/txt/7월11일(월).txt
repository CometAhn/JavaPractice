Thread 생성하는 방법

1. java.lang.Thread 클래스를 이용하는 방법.
	thread 클래스를 상속 받는 클래스를 작성한다.
	public void run() 메소드를 오버라이딩 한다.
	main() 메소드에서 Thread 클래스를 상속하는 클래스의 객체를 생성한다.
	해당 객체의 start() 메소드를 호출하여 스레드를 실행 시킨다.

2. java.lang.Runnable 인터페이스를 이용하는 방법.
	Runnable 인터페이스를 구성하는 클래스를 작성한다.
	public void run() 메소드를 오버라이딩한다.
	main() 메소드에서 Runnable 인터페이스를 구현하는 클래스의 객체를 생성한다.
	Thread 클래스의 객체를 생성하면서 생성자의 인자로 Runnable 인터페이스를 구현한 클래스의 객체를 전달한다.
	Thread 객체의 start() 메소드를 호출한다.
	
우선권(Priority)
스케줄러(Scheduler)의 기본 정책은 runnable 상태의 스레드를 우선권이 
가장 높은 스레드부터 running 상태로 가져와서 실행한다.
자바의 스레드는 우선권을 가지며 자바의 우선권은 1부터 10까지 값을 가질 수 있다.
우선권이 높을수록 running 될 수 있는 가능성이 더 커진다.
따라서 우선권이 낮은 스레드는 실행 기회가 적어질 수 있으며 이러한 상태를 기아상태(Starvation)라고 한다. 

스레드 상태변화
new
runnable
		block
running
dead

new : 스레드를 객체 생성한 상태를 의미한다. 
	Thread 클래스를 상속 받거나 Runnable 인터페이스를 구현한 클래스를 new키워드를 이용하여 객체를 생성하는 경우.
Runnable : 생성된 스레드에 start()메소드를 호출하는 상태이다.
			이 상태는 스레드가 실제 설정 되지는 않으며 단지 설행하기 위한 준비 단계를 의미한다.
Running : Runnable 상태의 스레드를 스케쥴러(scheduler)에 의해서 Running 상태로 이동하여 
			실제로 스레드가 동작하는 상태이다. 즉 run()메소드가 실행되는 상태이다.


