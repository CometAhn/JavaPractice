클래스 : 기능을 묶음.
왜 사용하는가? 같은 기능을 하는 프로그래밍을 매번 작성할 필요 없이 만들어두고 필요 시 호출만으로도 동작하게 하기 위해서.

class people {

	메소드() {
	 (기능)
	}

}

클래스 사용법 : 인스턴스 생성(클래스를 사용하기 위한 정의)
				People 인스턴스 이름 = new People();

메소드 사용법 : 인스턴스이름.기능();

클래스 상속 : class 자식클래스 extends 부모클래스
				부모 클래스의 기능을 그대로 물려 받고 자식 클래스에서 기능을 추가해서 새로운 클래스 생성.

오버라이딩 : 부모와 자식의 기능명을 동일하게 정의하지만 기능은 다르게 동작하게 하는 것
				super.메소드() - 부모의 기능
				this.메소드() = 자신(자식)의 기능

다형성 : 부모 클래스와 자식 클래스의 메소드가 같은가 ?
		 메소드가 같으면 자식을 부모에 대입 가능.
		 메소드가 다르다면 강제 행 변환을 통해 실행 가능.
		 People people = new Man();
		 people.println();
		 메소드가 다르다면 강제 형 변환을 통해 실행 가능
		 People people = new Man();
		 ((Man) people).enlist();
		 
		 -반드시 상속 관계가 성립되어야 한다.
		 - '큰 타입 = 작은 타입' 형식으로 즉, 작은 타입을 큰 타입에 저장하는형식으로 사용한다.
		    이때 큰 타입에 저장된 작은 타입의 실제 데이터형을 알기 위해서 instanceof 연산자를 사용할 수 있디.
		 - '작은 타입 = 큰 타입' 형식으로 사용하기 위해서는 강제 형변환. 즉, 명시적인 형변환을 해야한다.
		 - 일반적ㅇ로 중복 제거 및 재사용성을 위해서 메소드의 인자를 지정할 때 다형성을 많이 적용한다.
		 
추상화 : 추상화를 상속 받은 하위 클래스는 반드시 추상화에 대한 구체적인 메소드를 구현 하라.
		 부모 클래스에서 추상화에 대한 정의만 하게 되고 기능에 대한 상세 기능은 작성하지 않는다.
		 abstract void methodA();
		 상식 받은 자식 클래스에서는 추상화에 대한 명확한 기능을 작성하여야 한다.
		 자식 클래스에서 반드시 오버라이딩 해야만 사용할 수 있는 메소드를 의미한다.
		 자바에서 추상 메소드를 선언하여 사용하는 목적은 추상 메소드가 포함된 클래스를 상속 받은 지적 클래스가 반드시 추상 메소드를 구현하도록 하기 위함이다.
		 
	라면 조리법:
	1. 물 끓이기
	2. 스프와 라면 넣고 끓이기
	3. abstract 추가사항

	치즈라면 조리법 :
	1. 랴면 조리법
	2. 치즈를 넣는다.

	떡라면 조리법 :
	1. 라면 조리법
	2. 떡을 넣는다.


